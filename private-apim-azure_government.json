{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.20.4.51522",
      "templateHash": "735207236615971573"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location into which regionally scoped resources should be deployed. Note that Front Door is a global resource."
      }
    },
    "vnetIPPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "The IP address prefix (CIDR range) to use when deploying the virtual network."
      }
    },
    "apiManagementSubnetIPPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "The IP address prefix (CIDR range) to use when deploying the API Management subnet within the virtual network."
      }
    },
    "apiManagementPublisherName": {
      "type": "string",
      "defaultValue": "Contoso",
      "metadata": {
        "description": "The name of the API publisher. This information is used by API Management."
      }
    },
    "apiManagementPublisherEmail": {
      "type": "string",
      "defaultValue": "admin@contoso.com",
      "metadata": {
        "description": "The email address of the API publisher. This information is used by API Management."
      }
    },
    "azureOpenAiKey": {
      "type": "securestring",
      "metadata": {
        "description": "Provide Key 1 for the Azure Open AI service."
      }
    },
    "apiServiceUrl": {
      "type": "string",
      "defaultValue": "https://InsertYourAzureOpenAiNameHere.openai.azure.com/openai",
      "metadata": {
        "description": "Provide the URL of the Azure Open AI service."
      }
    },
    "azureOpenAiPublicIpAddress": {
      "type": "string",
      "defaultValue": "000.000.000.000",
      "metadata": {
        "description": "Provide the Public IP address of the Azure Open AI service."
      }
    }
  },
  "variables": {
    "openApiJson": "https://raw.githubusercontent.com/paullizer/AzureOpenAI-with-APIM/main/AzureOpenAI_OpenAPI.json",
    "openApiXml": "https://raw.githubusercontent.com/paullizer/AzureOpenAI-with-APIM/main/AzureOpenAI_Policy.xml",
    "tenantId": "[subscription().tenantId]",
    "apiNetwork": "Internal",
    "keyVaultskuName": "standard",
    "secretName": "aoai-api-key",
    "keysPermissions": [
      "list"
    ],
    "secretsPermissions": [
      "list"
    ],
    "enabledForDeployment": false,
    "enabledForDiskEncryption": false,
    "enabledForTemplateDeployment": false,
    "apiManagementSkuCount": 1,
    "apiManagementSku": "Developer",
    "apiManagementNamedValueName": "aoai-api-key",
    "apiName": "azure-openai-service-api",
    "apiPath": "",
    "apiSubscriptionName": "AzureOpenAI-Consumer-Example",
    "vnetName": "[format('vNet-{0}', uniqueString(resourceGroup().id))]",
    "apiManagementServiceName": "[format('apim-{0}', uniqueString(resourceGroup().id))]",
    "keyVaultName": "[format('kv-{0}', uniqueString(resourceGroup().id))]",
    "logAnalyticsName": "[format('law-{0}', uniqueString(resourceGroup().id))]",
    "applicationInsightsName": "[format('appIn-{0}', uniqueString(resourceGroup().id))]",
    "routeTableName": "[format('rt-{0}', uniqueString(resourceGroup().id))]",
    "privateDnsZoneNameApim": "azure-api.us",
    "privateDnsZoneNameAzureOpenAi": "openai.azure.com"
  },
  "resources": [
    {
      "type": "Microsoft.ApiManagement/service/namedValues",
      "apiVersion": "2021-08-01",
      "name": "[format('{0}/{1}', variables('apiManagementServiceName'), variables('apiManagementNamedValueName'))]",
      "properties": {
        "displayName": "[variables('apiManagementNamedValueName')]",
        "value": "[parameters('azureOpenAiKey')]",
        "secret": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'api-management')]",
        "[resourceId('Microsoft.Resources/deployments', 'key-vault')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "log-analytics-workspace",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsName": {
            "value": "[variables('logAnalyticsName')]"
          },
          "applicationInsightsName": {
            "value": "[variables('applicationInsightsName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "2983539520194522060"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "logAnalyticsName": {
              "type": "string"
            },
            "applicationInsightsName": {
              "type": "string"
            },
            "retentionInDays": {
              "type": "int",
              "defaultValue": 90,
              "minValue": 30,
              "maxValue": 730
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2020-08-01",
              "name": "[parameters('logAnalyticsName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                },
                "retentionInDays": "[parameters('retentionInDays')]"
              }
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02-preview",
              "name": "[parameters('applicationInsightsName')]",
              "location": "[parameters('location')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
              ]
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "network",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vnetName": {
            "value": "[variables('vnetName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "vnetIPPrefix": {
            "value": "[parameters('vnetIPPrefix')]"
          },
          "apiManagementSubnetIPPrefix": {
            "value": "[parameters('apiManagementSubnetIPPrefix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "5314909658708025739"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location into which the virtual network resources should be deployed."
              }
            },
            "vnetIPPrefix": {
              "type": "string",
              "metadata": {
                "description": "The IP address prefix (CIDR range) to use when deploying the virtual network."
              }
            },
            "apiManagementSubnetIPPrefix": {
              "type": "string",
              "metadata": {
                "description": "The IP address prefix (CIDR range) to use when deploying the API Management subnet within the virtual network."
              }
            },
            "vnetName": {
              "type": "string"
            }
          },
          "variables": {
            "apiManagementSubnetName": "apimSubnet",
            "nsgName": "apimSubnetNsg"
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2023-04-01",
              "name": "[parameters('vnetName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetIPPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('apiManagementSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('apiManagementSubnetIPPrefix')]",
                      "serviceEndpoints": [
                        {
                          "service": "Microsoft.Storage"
                        },
                        {
                          "service": "Microsoft.Sql"
                        },
                        {
                          "service": "Microsoft.EventHub"
                        },
                        {
                          "service": "Microsoft.ServiceBus"
                        }
                      ],
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2020-05-01",
              "name": "[variables('nsgName')]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "Client_communication_to_API_Management",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "80",
                      "sourceAddressPrefix": "AzureFrontDoor.Backend",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "Secure_Client_communication_to_API_Management",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "AzureFrontDoor.Backend",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 110,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "Management_endpoint_for_Azure_portal_and_Powershell",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "3443",
                      "sourceAddressPrefix": "ApiManagement",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 120,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "Dependency_on_Azure_Storage",
                    "properties": {
                      "description": "APIM service dependency on Azure Blob and Azure Table Storage",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "Storage",
                      "access": "Allow",
                      "priority": 130,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Azure_Active_Directory_and_Azure_KeyVault_dependency",
                    "properties": {
                      "description": "Connect to Azure Active Directory for Developer Portal Authentication or for Oauth2 flow during any Proxy Authentication",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "AzureActiveDirectory",
                      "access": "Allow",
                      "priority": 140,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Access_to_Azure_SQL_endpoints",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "1433",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "Sql",
                      "access": "Allow",
                      "priority": 150,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Access_to_Azure_KeyVault",
                    "properties": {
                      "description": "Allow APIM service control plane access to KeyVault to refresh secrets",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "AzureKeyVault",
                      "access": "Allow",
                      "priority": 160,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Dependency_for_Log_to_event_Hub_policy_and_monitoring_agent",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRanges": [
                        "5671",
                        "5672",
                        "443"
                      ],
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "EventHub",
                      "access": "Allow",
                      "priority": 170,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Dependency_on_Azure_File_Share_for_GIT",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "445",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "Storage",
                      "access": "Allow",
                      "priority": 180,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Health_and_Monitoring_Extension",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRanges": [
                        "443",
                        "12000"
                      ],
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "AzureCloud",
                      "access": "Allow",
                      "priority": 190,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Publish_Diagnostic_Logs_and_Metrics_Resource_Health_and_Application_Insights",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRanges": [
                        "1886",
                        "443"
                      ],
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "AzureMonitor",
                      "access": "Allow",
                      "priority": 200,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "Connect_To_SMTP_Relay_for_sending_e-mails",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRanges": [
                        "25",
                        "587",
                        "25028"
                      ],
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "Internet",
                      "access": "Allow",
                      "priority": 210,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Access_Redis_Service_for_Cache_policies_between_machines",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "6381-6383",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 220,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "Sync_Counters_for_Rate_Limit_policies_between_machines",
                    "properties": {
                      "protocol": "Udp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "4290",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 230,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "Azure_Infrastructure_Load_Balancer",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "AzureLoadBalancer",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 240,
                      "direction": "Inbound"
                    }
                  }
                ]
              }
            }
          ],
          "outputs": {
            "vnetName": {
              "type": "string",
              "value": "[parameters('vnetName')]"
            },
            "apiManagementSubnetResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), variables('apiManagementSubnetName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'log-analytics-workspace')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "api-management",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "serviceName": {
            "value": "[variables('apiManagementServiceName')]"
          },
          "publisherName": {
            "value": "[parameters('apiManagementPublisherName')]"
          },
          "publisherEmail": {
            "value": "[parameters('apiManagementPublisherEmail')]"
          },
          "skuName": {
            "value": "[variables('apiManagementSku')]"
          },
          "skuCount": {
            "value": "[variables('apiManagementSkuCount')]"
          },
          "subnetResourceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.apiManagementSubnetResourceId.value]"
          },
          "virtualNetworkType": {
            "value": "[variables('apiNetwork')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "5317994877091104090"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location into which the API Management resources should be deployed."
              }
            },
            "serviceName": {
              "type": "string",
              "metadata": {
                "description": "The name of the API Management service instance to create. This must be globally unique."
              }
            },
            "publisherName": {
              "type": "string",
              "metadata": {
                "description": "The name of the API publisher. This information is used by API Management."
              }
            },
            "publisherEmail": {
              "type": "string",
              "metadata": {
                "description": "The email address of the API publisher. This information is used by API Management."
              }
            },
            "skuName": {
              "type": "string",
              "allowedValues": [
                "Developer",
                "Premium"
              ],
              "metadata": {
                "description": "The name of the SKU to use when creating the API Management service instance. This must be a SKU that supports virtual network integration."
              }
            },
            "skuCount": {
              "type": "int",
              "metadata": {
                "description": "The number of worker instances of your API Management service that should be provisioned."
              }
            },
            "virtualNetworkType": {
              "type": "string"
            },
            "subnetResourceId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ApiManagement/service",
              "apiVersion": "2023-03-01-preview",
              "name": "[parameters('serviceName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('skuName')]",
                "capacity": "[parameters('skuCount')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "publisherName": "[parameters('publisherName')]",
                "publisherEmail": "[parameters('publisherEmail')]",
                "virtualNetworkConfiguration": {
                  "subnetResourceId": "[parameters('subnetResourceId')]"
                },
                "virtualNetworkType": "[parameters('virtualNetworkType')]"
              }
            }
          ],
          "outputs": {
            "apiManagementInternalIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('serviceName')), '2023-03-01-preview').publicIPAddresses[0]]"
            },
            "apiManagementIdentityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('serviceName')), '2023-03-01-preview', 'full').identity.principalId]"
            },
            "apiManagementProxyHostName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('serviceName')), '2023-03-01-preview').hostnameConfigurations[0].hostName]"
            },
            "apiManagementDeveloperPortalHostName": {
              "type": "string",
              "value": "[replace(reference(resourceId('Microsoft.ApiManagement/service', parameters('serviceName')), '2023-03-01-preview').developerPortalUrl, 'https://', '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'network')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "key-vault",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "enabledForDeployment": {
            "value": "[variables('enabledForDeployment')]"
          },
          "enabledForDiskEncryption": {
            "value": "[variables('enabledForDiskEncryption')]"
          },
          "enabledForTemplateDeployment": {
            "value": "[variables('enabledForTemplateDeployment')]"
          },
          "tenantId": {
            "value": "[variables('tenantId')]"
          },
          "objectId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'api-management'), '2022-09-01').outputs.apiManagementIdentityPrincipalId.value]"
          },
          "keysPermissions": {
            "value": "[variables('keysPermissions')]"
          },
          "secretsPermissions": {
            "value": "[variables('secretsPermissions')]"
          },
          "skuName": {
            "value": "[variables('keyVaultskuName')]"
          },
          "secretName": {
            "value": "[variables('secretName')]"
          },
          "secretValue": {
            "value": "[parameters('azureOpenAiKey')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "9351742757373124963"
            }
          },
          "parameters": {
            "keyVaultName": {
              "type": "string",
              "metadata": {
                "description": "Specifies the name of the key vault."
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Specifies the Azure location where the key vault should be created."
              }
            },
            "enabledForDeployment": {
              "type": "bool",
              "metadata": {
                "description": "Specifies whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."
              }
            },
            "enabledForDiskEncryption": {
              "type": "bool",
              "metadata": {
                "description": "Specifies whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
              }
            },
            "enabledForTemplateDeployment": {
              "type": "bool",
              "metadata": {
                "description": "Specifies whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
              }
            },
            "tenantId": {
              "type": "string",
              "metadata": {
                "description": "Specifies the Azure Active Directory tenant ID that should be used for authenticating requests to the key vault. Get it by using Get-AzSubscription cmdlet."
              }
            },
            "objectId": {
              "type": "string",
              "metadata": {
                "description": "Specifies the object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies. Get it by using Get-AzADUser or Get-AzADServicePrincipal cmdlets."
              }
            },
            "keysPermissions": {
              "type": "array",
              "metadata": {
                "description": "Specifies the permissions to keys in the vault. Valid values are: all, encrypt, decrypt, wrapKey, unwrapKey, sign, verify, get, list, create, update, import, delete, backup, restore, recover, and purge."
              }
            },
            "secretsPermissions": {
              "type": "array",
              "metadata": {
                "description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."
              }
            },
            "skuName": {
              "type": "string"
            },
            "secretName": {
              "type": "string",
              "metadata": {
                "description": "Specifies the name of the secret that you want to create."
              }
            },
            "secretValue": {
              "type": "securestring",
              "metadata": {
                "description": "Specifies the value of the secret that you want to create."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-11-01-preview",
              "name": "[parameters('keyVaultName')]",
              "location": "[parameters('location')]",
              "properties": {
                "enabledForDeployment": "[parameters('enabledForDeployment')]",
                "enabledForDiskEncryption": "[parameters('enabledForDiskEncryption')]",
                "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
                "tenantId": "[parameters('tenantId')]",
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "accessPolicies": [
                  {
                    "objectId": "[parameters('objectId')]",
                    "tenantId": "[parameters('tenantId')]",
                    "permissions": {
                      "keys": "[parameters('keysPermissions')]",
                      "secrets": "[parameters('secretsPermissions')]"
                    }
                  }
                ],
                "sku": {
                  "name": "[parameters('skuName')]",
                  "family": "A"
                },
                "networkAcls": {
                  "defaultAction": "Allow",
                  "bypass": "AzureServices"
                }
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('secretName'))]",
              "properties": {
                "value": "[parameters('secretValue')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'api-management')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "api",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "apimName": {
            "value": "[variables('apiManagementServiceName')]"
          },
          "apiName": {
            "value": "[variables('apiName')]"
          },
          "apiPath": {
            "value": "[variables('apiPath')]"
          },
          "openApiJson": {
            "value": "[variables('openApiJson')]"
          },
          "openApiXml": {
            "value": "[variables('openApiXml')]"
          },
          "serviceUrl": {
            "value": "[parameters('apiServiceUrl')]"
          },
          "apiSubscriptionName": {
            "value": "[variables('apiSubscriptionName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "937226898632570735"
            }
          },
          "parameters": {
            "apimName": {
              "type": "string"
            },
            "apiName": {
              "type": "string"
            },
            "apiPath": {
              "type": "string"
            },
            "openApiJson": {
              "type": "string"
            },
            "openApiXml": {
              "type": "string"
            },
            "serviceUrl": {
              "type": "string"
            },
            "apiSubscriptionName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ApiManagement/service/apis",
              "apiVersion": "2023-03-01-preview",
              "name": "[format('{0}/{1}', parameters('apimName'), parameters('apiName'))]",
              "properties": {
                "format": "openapi+json-link",
                "value": "[parameters('openApiJson')]",
                "path": "[parameters('apiPath')]",
                "serviceUrl": "[parameters('serviceUrl')]"
              }
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/policies",
              "apiVersion": "2023-03-01-preview",
              "name": "[format('{0}/{1}/{2}', parameters('apimName'), parameters('apiName'), 'policy')]",
              "properties": {
                "format": "xml-link",
                "value": "[parameters('openApiXml')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), parameters('apiName'))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/subscriptions",
              "apiVersion": "2023-03-01-preview",
              "name": "[format('{0}/{1}', parameters('apimName'), parameters('apiSubscriptionName'))]",
              "properties": {
                "allowTracing": false,
                "displayName": "[parameters('apiSubscriptionName')]",
                "ownerId": "/users/1",
                "scope": "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), parameters('apiName'))]",
                "state": "active"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), parameters('apiName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'key-vault')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "private-dns-zone-apim",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "privateDnsZoneName": {
            "value": "[variables('privateDnsZoneNameApim')]"
          },
          "apimName": {
            "value": "[variables('apiManagementServiceName')]"
          },
          "vnetName": {
            "value": "[variables('vnetName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "11567085132751591472"
            }
          },
          "parameters": {
            "privateDnsZoneName": {
              "type": "string"
            },
            "apimName": {
              "type": "string"
            },
            "vnetName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[parameters('privateDnsZoneName')]",
              "location": "global",
              "properties": {}
            },
            {
              "type": "Microsoft.Network/privateDnsZones/A",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), parameters('apimName'))]",
              "properties": {
                "ttl": 3600,
                "aRecords": [
                  {
                    "ipv4Address": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('apimName')), '2023-03-01-preview').privateIPAddresses[0]]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones/A",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), format('{0}.developer', parameters('apimName')))]",
              "properties": {
                "ttl": 3600,
                "aRecords": [
                  {
                    "ipv4Address": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('apimName')), '2023-03-01-preview').privateIPAddresses[0]]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones/A",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), format('{0}.management', parameters('apimName')))]",
              "properties": {
                "ttl": 3600,
                "aRecords": [
                  {
                    "ipv4Address": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('apimName')), '2023-03-01-preview').privateIPAddresses[0]]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones/A",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), format('{0}.portal', parameters('apimName')))]",
              "properties": {
                "ttl": 3600,
                "aRecords": [
                  {
                    "ipv4Address": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('apimName')), '2023-03-01-preview').privateIPAddresses[0]]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones/A",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), format('{0}.scm', parameters('apimName')))]",
              "properties": {
                "ttl": 3600,
                "aRecords": [
                  {
                    "ipv4Address": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('apimName')), '2023-03-01-preview').privateIPAddresses[0]]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones/SOA",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), '@')]",
              "properties": {
                "ttl": 3600,
                "soaRecord": {
                  "host": "azureprivatedns.net",
                  "email": "azureprivatedns-host.microsoft.com",
                  "serialNumber": 1,
                  "refreshTime": 3600,
                  "retryTime": 300,
                  "expireTime": 2419200,
                  "minimumTtl": 10
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), parameters('apimName'))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/VirtualNetworks', parameters('vnetName'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'api-management')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "private-dns-zone-aoai",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "privateDnsZoneName": {
            "value": "[variables('privateDnsZoneNameAzureOpenAi')]"
          },
          "apiServiceUrl": {
            "value": "[parameters('apiServiceUrl')]"
          },
          "azureOpenAiPublicIpAddress": {
            "value": "[parameters('azureOpenAiPublicIpAddress')]"
          },
          "vnetName": {
            "value": "[variables('vnetName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "14248968307078218024"
            }
          },
          "parameters": {
            "privateDnsZoneName": {
              "type": "string"
            },
            "vnetName": {
              "type": "string"
            },
            "apiServiceUrl": {
              "type": "string"
            },
            "azureOpenAiPublicIpAddress": {
              "type": "string"
            }
          },
          "variables": {
            "azureOpenAiHostname": "[split(split(parameters('apiServiceUrl'), '.')[0], '/')[2]]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[parameters('privateDnsZoneName')]",
              "location": "global",
              "properties": {}
            },
            {
              "type": "Microsoft.Network/privateDnsZones/A",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), variables('azureOpenAiHostname'))]",
              "properties": {
                "ttl": 3600,
                "aRecords": [
                  {
                    "ipv4Address": "[parameters('azureOpenAiPublicIpAddress')]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones/SOA",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), '@')]",
              "properties": {
                "ttl": 3600,
                "soaRecord": {
                  "host": "azureprivatedns.net",
                  "email": "azureprivatedns-host.microsoft.com",
                  "serialNumber": 1,
                  "refreshTime": 3600,
                  "retryTime": 300,
                  "expireTime": 2419200,
                  "minimumTtl": 10
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), variables('azureOpenAiHostname'))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/VirtualNetworks', parameters('vnetName'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'private-dns-zone-apim')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "route-table",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "routeTableName": {
            "value": "[variables('routeTableName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "azureOpenAiPublicIpAddress": {
            "value": "[parameters('azureOpenAiPublicIpAddress')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "9456003414347519234"
            }
          },
          "parameters": {
            "routeTableName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "azureOpenAiPublicIpAddress": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/routeTables",
              "apiVersion": "2023-04-01",
              "name": "[parameters('routeTableName')]",
              "location": "[parameters('location')]",
              "properties": {
                "disableBgpRoutePropagation": false
              }
            },
            {
              "type": "Microsoft.Network/routeTables/routes",
              "apiVersion": "2023-04-01",
              "name": "[format('{0}/{1}', parameters('routeTableName'), 'route_to_internet_for_aoai')]",
              "properties": {
                "addressPrefix": "[format('{0}/32', parameters('azureOpenAiPublicIpAddress'))]",
                "nextHopType": "Internet",
                "hasBgpOverride": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTableName'))]"
              ]
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "apiManagementProxyHostName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'api-management'), '2022-09-01').outputs.apiManagementProxyHostName.value]"
    },
    "apiManagementPortalHostName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'api-management'), '2022-09-01').outputs.apiManagementDeveloperPortalHostName.value]"
    }
  }
}